(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{83:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"white-box-testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#white-box-testing","aria-hidden":"true"}},[e._v("#")]),e._v(" White Box Testing")]),a("p",[e._v("This involves examining code to devise test cases.")]),a("p",[e._v("A consideration in white box testing is "),a("em",[e._v("test coverage")]),e._v(": a description of how well test cases cover the different behaviours of the code.")]),a("p",[e._v("White box testing and black box testing are not mutually exclusive.")]),a("p",[e._v("You might start with a set of black box test cases, build the algorithm, and expand with white box test cases to reach the desired test coverage.")]),a("h2",{attrs:{id:"coverage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coverage","aria-hidden":"true"}},[e._v("#")]),e._v(" Coverage")]),a("p",[e._v("Three levels of test coverage: "),a("strong",[e._v("statement coverage")]),e._v(", "),a("strong",[e._v("decision coverage")]),e._v(", and "),a("strong",[e._v("path coverage")]),e._v(".")]),a("h3",{attrs:{id:"statement-coverage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statement-coverage","aria-hidden":"true"}},[e._v("#")]),e._v(" Statement Coverage")]),a("p",[e._v("Every statement in the function is executed. This is a minimal starting point. Better to have a stronger coverage metric.")]),a("h3",{attrs:{id:"decision-coverage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decision-coverage","aria-hidden":"true"}},[e._v("#")]),e._v(" Decision Coverage")]),a("p",[e._v("A stronger level of coverage. All possible outcomes of decisions are exercised. For boolean tests, this means we construct a test case where the expression evaluates to true, and another where it evaluates to false. If we have a switch/case statement, we must construct at least one test case per choice in the case statement, plus one for the default case.")]),a("h3",{attrs:{id:"path-coverage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path-coverage","aria-hidden":"true"}},[e._v("#")]),e._v(" Path Coverage")]),a("p",[e._v("Test cases must span all possible valid paths through the control flow graph.")])])}],!1,null,null,null);t.default=r.exports}}]);