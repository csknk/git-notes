(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{77:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"string-copying"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-copying","aria-hidden":"true"}},[t._v("#")]),t._v(" String Copying")]),a("p",[t._v("The C library "),a("code",[t._v("strncpy()")]),t._v(" function copies a string from one location to another, taking a parameter that specifies maximum number of characters that may be copied. If the length of the source string exceeds the limit, then the destination is not null terminated - a situation which the programmer must typically rectify before using the string for any significant purpose.")]),a("p",[t._v("The similarly named function "),a("code",[t._v("strcpy()")]),t._v(" is more dangerous, as there is no way to tell it how much space is available in the destination. If insufficient space is available, then "),a("code",[t._v("strcpy()")]),t._v(" will overwrite whatever follows it in memory, creating potential problems.")]),a("p",[t._v("Some of these problems may result in security vulnerabilities. There is another function, "),a("code",[t._v("strdup()")]),t._v(" which allocates space for a copy of the string, and copies it into that space.")]),a("h2",{attrs:{id:"strcpy-vs-strncpy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strcpy-vs-strncpy","aria-hidden":"true"}},[t._v("#")]),t._v(" strcpy vs strncpy")]),a("p",[a("code",[t._v("strncpy()")]),t._v(" attempts to prevent buffer overflow by requiring a length. "),a("code",[t._v("strcpy()")]),t._v(" depends on a trailing "),a("code",[t._v("\\0")]),t._v(", which may not always be present.")]),a("p",[t._v("On the other hand, "),a("code",[t._v("strncpy()")]),t._v(" does not null-terminate the string - which can be very problematic.")]),a("p",[a("code",[t._v("strncpy()")]),t._v(" oddities:")]),a("ul",[a("li",[t._v("It doesn't put a nul-terminator on the destination if it is completely filled; and")]),a("li",[t._v("It always completely fills the destination, with nuls if necessary.")])]),a("h2",{attrs:{id:"safer-strncpy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#safer-strncpy","aria-hidden":"true"}},[t._v("#")]),t._v(" Safer strncpy()?")]),a("p",[t._v('For a "safer strcpy()", you are better off using strncat() like so:')]),a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{attrs:{class:"token macro property"}},[t._v("#"),a("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("<string.h>")])]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("copyString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("dest"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t destSize"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("source"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("destSize "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("strlen")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tdest"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'\\0'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{attrs:{class:"token function"}},[t._v("strncat")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dest"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" destSize "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("s1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"David"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" dest"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token function"}},[t._v("copyString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dest"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token function"}},[t._v("printf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"dest is %s\\n"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dest"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/a/1258577/3590673",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reference")])])])}],!1,null,null,null);s.default=e.exports}}]);