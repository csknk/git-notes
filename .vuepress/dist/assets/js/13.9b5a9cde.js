(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{70:function(e,t,i){"use strict";i.r(t);var n=i(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"pointer-arithmetic"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#pointer-arithmetic","aria-hidden":"true"}},[e._v("#")]),e._v(" Pointer Arithmetic")]),i("p",[e._v("Incrementing an "),i("code",[e._v("int *")]),e._v(' integer pointer makes it point to the "next" integer in memory.')]),i("p",[e._v("The compiler emits instructions which actually add the number of bytes that an integer occupies in memory")]),i("p",[e._v("For each type of pointer, adding 1 has a different meaning.")]),i("p",[e._v('For an integer pointer, adding 1 means "one integer later in memory". Incrementing the pointer should have it point to the “next” integer in memory.i')]),i("p",[e._v("The compiler emits instructions which actually add the number of bytes that an integer occupies in memory (e.g., +1 means to change the numerical value of the pointer by +4).")]),i("p",[e._v("When adding N to a pointer to any type T, the compiler generates instructions which add (N * the number of bytes for values of type T) to the numeric value of the pointer - causing it to point N Ts further in memory.")]),i("p",[e._v("Pointer arithmetic does not work with pointers to void - the compiler has no idea how big the pointed-at object is, therefore cannot N objects.")]),i("h2",{attrs:{id:"undefined-behaviour"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#undefined-behaviour","aria-hidden":"true"}},[e._v("#")]),e._v(" Undefined Behaviour")]),i("p",[e._v("If you move a pointer by means of pointer arithmetic and it points to a memory location outside the scope of the programme, "),i("em",[e._v("undefined behaviour")]),e._v(" may result. This should be considered erroneous.")]),i("p",[e._v("C gives you a lot of rope when it comes to pointer assignment/arithmetic - C gives the compiler a lot of freedom with regard to control of memory.")])])}],!1,null,null,null);t.default=o.exports}}]);